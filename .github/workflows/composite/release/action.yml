name: "Release"
description: "Release"

inputs:
  releaseChannel:
    required: false
    description: "The release channel to use for the release. 'stable' or 'pre-release'"
    default: "pre-release"
  args:
    required: false
    description: "Additional arguments to pass to Tauri"
  GITHUB_TOKEN:
    required: true
    description: "The GitHub token to use for the release"
  TAURI_PRIVATE_KEY:
    required: true
    description: "The private key to use for signing the release"
  TAURI_PRIVATE_KEY_PASSWORD:
    required: true
    description: "The password for the private key"
  R2_ACCOUNT_ID:
    required: true
    description: "The account ID for the Cloudflare account"
  R2_ACCESS_KEY_ID:
    required: true
    description: "The access key ID for the R2 bucket"
  R2_SECRET_ACCESS_KEY:
    required: true
    description: "The secret access key for the R2 bucket"
  R2_BUCKET:
    required: true
    description: "The R2 bucket to upload the release to"
  VT_API_KEY:
    required: true
    description: "The VirusTotal API key to use for scanning the release"

runs:
  using: "composite"
  steps:
    - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
      with:
        version: 10
        run_install: false
    - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
      with:
        node-version: 23
        cache: pnpm
        cache-dependency-path: pnpm-lock.yaml

    - run: node --version
      shell: bash
    - run: pnpm --version
      shell: bash

    - run: pnpm install --frozen-lockfile
      shell: bash

    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2
      with:
        workspaces: "./src-tauri -> target"

    - name: Build and Create Release
      uses: tauri-apps/tauri-action@42e9df6c59070d114bf90dcd3943a1b8f138b113 # v0
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        TAURI_SIGNING_PRIVATE_KEY: ${{ inputs.TAURI_PRIVATE_KEY }}
        TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ inputs.TAURI_PRIVATE_KEY_PASSWORD }}
      with:
        tagName: "konoasset-v__VERSION__"
        releaseName: "KonoAsset v__VERSION__"
        includeUpdaterJson: true
        updaterJsonPreferNsis: true
        prerelease: ${{ inputs.releaseChannel == 'pre-release' }}
        args: ${{ inputs.args }}

    - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
      with:
        result-encoding: string
        script: |
          const fs = require('fs');
          const path = require('path');

          const latestJsonPath = path.join(process.cwd(), 'latest.json');
          const latestJson = JSON.parse(fs.readFileSync(latestJsonPath, 'utf8'));

          const url = latestJson['platforms']['windows-x86_64']['url'];
          const filename = path.basename(url);
          const newUrl = `https://releases.konoasset.dev/installer/${filename}`;

          latestJson['platforms']['windows-x86_64']['url'] = newUrl;

          fs.writeFileSync(latestJsonPath, JSON.stringify(latestJson, null, 2));

    - name: Create upload Directory
      shell: bash
      run: |
        mkdir -p upload/manifests upload/installer
        cp changelog.json ./upload/manifests/changelog.json
        mv latest.json ./upload/manifests/${{ inputs.releaseChannel }}.json
        mv ./src-tauri/target/release/bundle/nsis/* ./upload/installer/

    - name: Update pre-release.json on stable release
      if: ${{ inputs.releaseChannel == 'stable' }}
      shell: bash
      run: |
        cp ./upload/manifests/stable.json ./upload/manifests/pre-release.json

    - name: Upload artifacts
      uses: ryand56/r2-upload-action@b801a390acbdeb034c5e684ff5e1361c06639e7c # v1.4
      with:
        r2-account-id: ${{ inputs.R2_ACCOUNT_ID }}
        r2-access-key-id: ${{ inputs.R2_ACCESS_KEY_ID }}
        r2-secret-access-key: ${{ inputs.R2_SECRET_ACCESS_KEY }}
        r2-bucket: ${{ inputs.R2_BUCKET }}
        source-dir: upload/
        destination-dir: ./

    - name: VirusTotal Scan
      uses: crazy-max/ghaction-virustotal@d34968c958ae283fe976efed637081b9f9dcf74f # v4
      with:
        vt_api_key: ${{ inputs.VT_API_KEY }}
        request_rate: 4
        files: |
          ./upload/installer/*.exe
